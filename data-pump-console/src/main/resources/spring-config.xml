<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <bean id="simpleConnectionProvider" class="com.smikhalev.sqlserverutils.core.connection.C3P0ConnectionProvider">
        <constructor-arg name="minPoolSize" value="50"/>
        <constructor-arg name="acquireIncrement" value="50"/>
        <constructor-arg name="maxPoolSize" value="300"/>
    </bean>

    <bean id="statementExecutor" class="com.smikhalev.sqlserverutils.core.executor.StatementExecutor">
        <constructor-arg ref="simpleConnectionProvider"/>
    </bean>

    <bean id="databaseLoader" class="com.smikhalev.sqlserverutils.schema.DatabaseLoader">
        <constructor-arg ref="statementExecutor"/>
    </bean>

    <bean id="tableSizeProvider" class="com.smikhalev.sqlserverutils.exportdata.sizeprovider.SystemViewTableSizeProvider">
        <constructor-arg ref="statementExecutor"/>
    </bean>

    <bean id="indexSizeProvider" class="com.smikhalev.sqlserverutils.exportdata.sizeprovider.SystemViewIndexSizeProvider">
        <constructor-arg ref="statementExecutor"/>
    </bean>

    <bean id="exportStrategySelector" class="com.smikhalev.sqlserverutils.exportdata.ExportStrategySelector">
        <constructor-arg>
            <list>
                <bean class="com.smikhalev.sqlserverutils.exportdata.strategy.TableSizeDependantStrategy">
                    <constructor-arg>
                        <bean class="com.smikhalev.sqlserverutils.exportdata.strategy.FullExportStrategy"/>
                    </constructor-arg>
                    <constructor-arg ref="tableSizeProvider"/>
                    <constructor-arg name="tableSizeLimit" value="500000"/>
                </bean>
                <bean class="com.smikhalev.sqlserverutils.exportdata.strategy.ClusteredIndexChunkStrategy">
                    <constructor-arg ref="tableSizeProvider"/>
                    <constructor-arg ref="indexSizeProvider"/>
                    <constructor-arg name="chunkSize" value="100000"/>
                </bean>
                <bean class="com.smikhalev.sqlserverutils.exportdata.strategy.UniqueNonClusteredCompositeChunkStrategy">
                    <constructor-arg ref="tableSizeProvider"/>
                    <constructor-arg ref="indexSizeProvider"/>
                    <constructor-arg name="chunkSize" value="500000"/>
                </bean>
                <bean class="com.smikhalev.sqlserverutils.exportdata.strategy.CreateUniqueNonClusteredIndexChunkStrategy">
                    <constructor-arg ref="tableSizeProvider"/>
                    <constructor-arg ref="indexSizeProvider"/>
                    <constructor-arg ref="statementExecutor"/>
                    <constructor-arg value="500000"/>
                </bean>
            </list>
        </constructor-arg>
    </bean>

    <bean id="valueEncoder" class="com.smikhalev.sqlserverutils.exportdata.encoder.SimpleValueEncoder"/>

    <bean id="exporter" class="com.smikhalev.sqlserverutils.exportdata.exporter.ParallelExporter">
        <constructor-arg ref="exportStrategySelector"/>
        <constructor-arg ref="valueEncoder"/>
        <constructor-arg ref="statementExecutor"/>
        <constructor-arg name="threadCount" value="20"/>
    </bean>

    <bean id="exportManager" class="com.smikhalev.sqlserverutils.exportdata.ExportManager">
        <constructor-arg ref="exporter"/>
        <constructor-arg ref="databaseLoader"/>
        <constructor-arg ref="tableSizeProvider"/>
    </bean>

    <bean id="packetImporter" class="com.smikhalev.sqlserverutils.importdata.PacketImporter">
        <constructor-arg ref="statementExecutor"/>
    </bean>

    <bean id="valueConverter" class="com.smikhalev.sqlserverutils.importdata.ImportValueConverter"/>

    <bean id="tableValueConstructor" class="com.smikhalev.sqlserverutils.importdata.TableValueConstructor"/>

    <bean id="importStrategySelector" class="com.smikhalev.sqlserverutils.importdata.ImportStrategySelector">
        <constructor-arg>
            <list>
                <bean class="com.smikhalev.sqlserverutils.importdata.strategy.TableSizeDependantStrategy">
                    <constructor-arg>
                        <bean class="com.smikhalev.sqlserverutils.importdata.strategy.BulkInsertDropIndexesImportStrategy">
                            <constructor-arg ref="tableValueConstructor"/>
                            <constructor-arg ref="statementExecutor"/>
                            <constructor-arg name="size" value="100"/>
                        </bean>
                    </constructor-arg>
                    <constructor-arg ref="tableSizeProvider"/>
                    <constructor-arg name="tableSizeLimit" value="10000"/>
                </bean>
                <bean class="com.smikhalev.sqlserverutils.importdata.strategy.BulkInsertImportStrategy">
                    <constructor-arg ref="tableValueConstructor"/>
                    <constructor-arg name="size" value="100"/>
                </bean>
            </list>
        </constructor-arg>
    </bean>

    <bean id="csvLineParser" class="com.smikhalev.sqlserverutils.importdata.importer.CsvLineParser"/>

    <bean id="importer" class="com.smikhalev.sqlserverutils.importdata.importer.ParallelImporter">
        <constructor-arg ref="packetImporter"/>
        <constructor-arg ref="importStrategySelector"/>
        <constructor-arg ref="restorableAction"/>
        <constructor-arg ref="csvLineParser"/>
        <constructor-arg name="threadCount" value="100"/>
    </bean>

    <bean id="importManager" class="com.smikhalev.sqlserverutils.importdata.ImportManager">
        <constructor-arg ref="importer"/>
        <constructor-arg ref="databaseLoader"/>
    </bean>

    <bean id="restorableAction" class="java.util.ArrayList" >
        <constructor-arg>
            <list>
                <bean class="com.smikhalev.sqlserverutils.restorableaction.DisableTriggersRestorableAction">
                    <constructor-arg ref="statementExecutor"/>
                </bean>
                <bean class="com.smikhalev.sqlserverutils.restorableaction.DisableForeignKeysRestorableAction">
                    <constructor-arg ref="statementExecutor"/>
                </bean>
            </list>
        </constructor-arg>
    </bean>

    <bean id="importContext" class="com.smikhalev.sqlserverutils.RestorableContext">
        <constructor-arg ref="restorableAction"/>
    </bean>

    <bean id="cleaner" class="com.smikhalev.sqlserverutils.cleardata.TruncateCleaner">
        <constructor-arg ref="statementExecutor"/>
        <constructor-arg ref="restorableAction"/>
    </bean>

    <bean id="clearManager" class="com.smikhalev.sqlserverutils.cleardata.CleanManager">
        <constructor-arg ref="cleaner"/>
        <constructor-arg ref="databaseLoader"/>
    </bean>
</beans>