1. Purpose:This project provides the following ability:    1) Create schema object in SQL Server      - table;	  - clustered index;	  - nonclustered index;	  - foreign key;	  - trigger;    2) Generate data based on column type    3) Export data from tables into files    4) Import these files back into SQL Server 2. Prerequisite    1) This program support SQL Server 2012 and above	2) Java 1.73. Set up SQL Server	You need to create a user in SQL Server which has appropriate rights.	Here is the simple script which creates a user pumper and grant needed rights to database mini-pump.	-----------------------------------------------	create login [pumper] with password=N'pumper'    use [mini-pump];    GO    create user pumper for login pumper    grant view database state to pumper;    grant alter to pumper;    grant control to pumper;    -----------------------------------------------4. Build    There are 2 ways how you can build the project.	1) With tests	   	Since maven modules contain integration test.	To successfully run it you need to set up connection string in appropriate files:	   - sql-server-utils\data-pump\src\test\resources\test-spring-config.xml	   - sql-server-utils\schema\src\test\resources\test-spring-config.xml		To do it you should inject your connection string into the simpleConnectionProvider bean, like the following	<bean id="simpleConnectionProvider" class="com.smikhalev.sqlserverutils.core.connection.SimpleConnectionProvider">        <constructor-arg>            <value>jdbc:jtds:sqlserver://server-name/empty-database-name;user=pumper;password=pumper;</value>        </constructor-arg>    </bean>		For test target database should be empty - without any schema object.		And finally execute mvn package in the root project folder.    	2) Without test	To skip setting up connection string in test-spring-configs you can just execute	mvn package -DskipTests=true		After successful build file dpump.jar should appear in data-pump-console\target directory.5. Execution   To create sample schema and data in database you can use createPerformanceDatabase test from CreatePerformanceTest class.    By default this test is ignored since it doesn't remove schema objects after execution but it can be simply unignored and run.      Here is some samples of program execution      java -jar dpump.jar export jdbc:jtds:sqlserver://server-name/database-name;user=pumper;password=pumper; c:\   java -jar dpump.jar clear jdbc:jtds:sqlserver://server-name/database-name;user=pumper;password=pumper;   java -jar dpump.jar import jdbc:jtds:sqlserver://server-name/database-name;user=pumper;password=pumper; c:\