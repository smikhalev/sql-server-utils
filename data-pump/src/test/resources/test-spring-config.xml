<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <bean id="simpleConnectionProvider" class="com.smikhalev.sqlserverutils.core.connection.SimpleConnectionProvider">
        <constructor-arg>
            <value>jdbc:jtds:sqlserver://mikhalevpc/mini-pump;user=sa;password=sa2013;</value>
        </constructor-arg>
    </bean>

    <bean id="statementExecutor" class="com.smikhalev.sqlserverutils.core.executor.StatementExecutor">
        <constructor-arg ref="simpleConnectionProvider"/>
    </bean>

    <bean id="charColumnGenerator" class="com.smikhalev.sqlserverutils.generator.columngenerator.CharColumnGenerator"/>
    <bean id="dateTimeColumnGenerator" class="com.smikhalev.sqlserverutils.generator.columngenerator.DateColumnGenerator"/>
    <bean id="floatColumnGenerator" class="com.smikhalev.sqlserverutils.generator.columngenerator.FloatColumnGenerator"/>

    <bean id="columnGenerator" class="java.util.EnumMap">
        <constructor-arg>
            <map
                key-type="com.smikhalev.sqlserverutils.schema.dbobjects.DbType"
                value-type="com.smikhalev.sqlserverutils.generator.ColumnGenerator">
                <entry key="BIGINT">
                    <bean class="com.smikhalev.sqlserverutils.generator.columngenerator.IntegerColumnGenerator">
                        <constructor-arg value="9223372036854775807"/>
                    </bean>
                </entry>
                <entry key="INT">
                    <bean class="com.smikhalev.sqlserverutils.generator.columngenerator.IntegerColumnGenerator">
                        <constructor-arg value="2147483647"/>
                    </bean>
                </entry>
                <entry key="SMALLINT">
                    <bean class="com.smikhalev.sqlserverutils.generator.columngenerator.IntegerColumnGenerator">
                        <constructor-arg value="32767"/>
                    </bean>
                </entry>
                <entry key="TINYINT">
                    <bean class="com.smikhalev.sqlserverutils.generator.columngenerator.IntegerColumnGenerator">
                        <constructor-arg value="256"/>
                    </bean>
                </entry>
                <entry key="BIT">
                    <bean class="com.smikhalev.sqlserverutils.generator.columngenerator.IntegerColumnGenerator">
                        <constructor-arg value="2"/>
                    </bean>
                </entry>
                <entry key="NVARCHAR" value-ref="charColumnGenerator"/>
                <entry key="VARCHAR" value-ref="charColumnGenerator"/>
                <entry key="DATETIME" value-ref="dateTimeColumnGenerator"/>
                <entry key="DATE">
                    <bean class="com.smikhalev.sqlserverutils.generator.columngenerator.CastColumnGenerator">
                        <constructor-arg ref="dateTimeColumnGenerator"/>
                        <constructor-arg value="date"/>
                    </bean>
                </entry>
                <entry key="TIME">
                    <bean class="com.smikhalev.sqlserverutils.generator.columngenerator.CastColumnGenerator">
                        <constructor-arg ref="dateTimeColumnGenerator"/>
                        <constructor-arg value="time"/>
                    </bean>
                </entry>
                <entry key="FLOAT" value-ref="floatColumnGenerator"/>
                <entry key="REAL" value-ref="floatColumnGenerator"/>
            </map>
        </constructor-arg>
    </bean>

    <bean id="columnGeneratorFactory" class="com.smikhalev.sqlserverutils.generator.ColumnGeneratorFactory">
        <constructor-arg name="columnGenerators" ref="columnGenerator"/>
    </bean>

    <bean id="dataGenerator" class="com.smikhalev.sqlserverutils.generator.SimpleDataGenerator">
        <constructor-arg ref="columnGeneratorFactory"/>
        <constructor-arg ref="statementExecutor"/>
        <constructor-arg value="1000000"/>
    </bean>

    <bean id="tableSizeProvider" class="com.smikhalev.sqlserverutils.test.sizeprovider.SystemViewTableSizeWithoutLazyLoadingProvider">
        <constructor-arg ref="statementExecutor"/>
    </bean>

    <bean id="indexSizeProvider" class="com.smikhalev.sqlserverutils.test.sizeprovider.SystemViewIndexSizeWithoutLazyLoadingProvider">
        <constructor-arg ref="statementExecutor"/>
    </bean>

    <bean id="strategySelector" class="com.smikhalev.sqlserverutils.exportdata.ExportStrategySelector">
        <constructor-arg>
            <list>
                <bean class="com.smikhalev.sqlserverutils.exportdata.strategy.TableSizeDependantStrategy">
                    <constructor-arg>
                        <bean class="com.smikhalev.sqlserverutils.exportdata.strategy.FullExportStrategy"/>
                    </constructor-arg>
                    <constructor-arg ref="tableSizeProvider"/>
                    <constructor-arg name="tableSizeLimit" value="10"/>
                </bean>
                <bean class="com.smikhalev.sqlserverutils.exportdata.strategy.UniqueNonClusteredIndexChunkStrategy">
                    <constructor-arg ref="tableSizeProvider"/>
                    <constructor-arg ref="indexSizeProvider"/>
                    <constructor-arg name="chunkSize" value="10"/>
                </bean>
                <bean class="com.smikhalev.sqlserverutils.exportdata.strategy.UniqueClusteredIndexWithAnyNonClusteredIndexChunkStrategy">
                    <constructor-arg ref="tableSizeProvider"/>
                    <constructor-arg ref="indexSizeProvider"/>
                    <constructor-arg name="chunkSize" value="10"/>
                </bean>
                <bean class="com.smikhalev.sqlserverutils.exportdata.strategy.ClusteredIndexChunkStrategy">
                    <constructor-arg ref="tableSizeProvider"/>
                    <constructor-arg ref="indexSizeProvider"/>
                    <constructor-arg name="chunkSize" value="10"/>
                </bean>
                <bean class="com.smikhalev.sqlserverutils.exportdata.strategy.NonClusteredIndexChunkStrategy">
                    <constructor-arg ref="tableSizeProvider"/>
                    <constructor-arg ref="indexSizeProvider"/>
                    <constructor-arg name="chunkSize" value="10"/>
                </bean>

                <bean class="com.smikhalev.sqlserverutils.exportdata.strategy.FullExportStrategy"/>
            </list>
        </constructor-arg>
    </bean>

    <bean id="valueEncoder" class="com.smikhalev.sqlserverutils.exportdata.encoder.SimpleValueEncoder"/>

    <bean id="exporter" class="com.smikhalev.sqlserverutils.exportdata.Exporter">
        <constructor-arg ref="strategySelector"/>
        <constructor-arg ref="valueEncoder"/>
        <constructor-arg ref="statementExecutor"/>
    </bean>

    <bean id="tableValueConstructor" class="com.smikhalev.sqlserverutils.importdata.TableValueConstructor"/>

    <bean id="packetImporter" class="com.smikhalev.sqlserverutils.importdata.PacketImporter">
        <constructor-arg ref="tableValueConstructor"/>
        <constructor-arg ref="statementExecutor"/>
    </bean>

    <bean id="valueConverter" class="com.smikhalev.sqlserverutils.importdata.ImportValueConverter"/>

    <bean id="importer" class="com.smikhalev.sqlserverutils.importdata.Importer">
        <constructor-arg ref="packetImporter"/>
        <constructor-arg ref="valueConverter"/>
        <constructor-arg value="10"/>
    </bean>

    <bean id="tableComparator" class="com.smikhalev.sqlserverutils.test.TableComparator">
        <constructor-arg ref="statementExecutor"/>
    </bean>
</beans>


